{
	"name": "demoflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "inputdfdataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "inputdfflow2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Union1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as string,\n\t\tlpep_dropoff_datetime as string,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as string,\n\t\tPULocationID as string,\n\t\tDOLocationID as string,\n\t\tpassenger_count as string,\n\t\ttrip_distance as string,\n\t\tfare_amount as string,\n\t\textra as string,\n\t\tmta_tax as string,\n\t\ttip_amount as string,\n\t\ttolls_amount as string,\n\t\tehail_fee as string,\n\t\timprovement_surcharge as string,\n\t\ttotal_amount as float,\n\t\tpayment_type as string,\n\t\ttrip_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as string,\n\t\tlpep_dropoff_datetime as string,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as string,\n\t\tPULocationID as string,\n\t\tDOLocationID as string,\n\t\tpassenger_count as string,\n\t\ttrip_distance as string,\n\t\tfare_amount as string,\n\t\textra as string,\n\t\tmta_tax as string,\n\t\ttip_amount as string,\n\t\ttolls_amount as string,\n\t\tehail_fee as string,\n\t\timprovement_surcharge as string,\n\t\ttotal_amount as float,\n\t\tpayment_type as string,\n\t\ttrip_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 union(byName: false)~> Union1\nUnion1 derive(tripexperience = iif(total_amount>=12, \"fair\", \"loss\")) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}